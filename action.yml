name: Java Unit Test and Analysis with SonarCloud
description: Run Java unit tests, can analyse with SonarCloud
branding:
  icon: check-square
  color: blue

inputs:
  ### Required
  commands:
    description: Commands to run tests, start with '|' for multi-line
    required: true

  dir:
    description: App/package directory
    required: true
    pattern: "^[a-zA-Z0-9._/-]+$"

  java-version:
    description: Java version, defaults to 17 (LTS)
    required: true
    pattern: '^[0-9]+(\.[0-9]+)*$'

  ### Typical / recommended
  java-cache:
    description: Java package manager cache, defaults to maven
    default: maven
    pattern: "^(maven|gradle)$"

  java-distribution:
    description: Java distribution, defaults to temurin
    default: temurin
    pattern: "^(temurin|corretto|openjdk|zulu)$"

  sonar_args:
    # https://docs.sonarcloud.io/advanced-setup/analysis-parameters/
    description: SonarCloud command line arguments
    default: |
      -Dsonar.organization=bcgov-sonarcloud
      -Dsonar.projectKey=bcgov_${{ github.repository }}

  sonar_token:
    description: Sonar token, provide unpopulated token for pre-setup (will skip)
    pattern: "^[a-zA-Z0-9]{20,}$"

  triggers:
    description: Paths (array) used to trigger a build; e.g. ('./backend/' './frontend/)

  ### Usually a bad idea / not recommended
  diff_branch:
    description: Branch to diff against
    default: ${{ github.event.repository.default_branch }}
    pattern: "^[a-zA-Z0-9._/-]+$"

  repository:
    description: Non-default repository to clone (used for testing this action)
    default: ${{ github.repository }}
    pattern: "^[a-zA-Z0-9-_]+/[a-zA-Z0-9-_]+$"

  branch:
    description: Non-default branch to clone (used for testing this action)
    default: ""
    pattern: "^[a-zA-Z0-9._/-]*$"

outputs:
  triggered:
    description: Whether the action was triggered based on path changes
    value: ${{ steps.diff.outputs.triggered }}

runs:
  using: composite
  steps:
    - name: Warnings for breaking changes
      shell: bash
      run: |
        # Warnings for breaking changes

        # sonar_project_token renamed sonar_token
        if [ ! -z "${{ inputs.sonar_project_token }}" ]; then
          echo -e "\nsonar_project_token renamed.  Please correct this and try again."
          echo -e "\n\tAction: rename sonar_project_token to sonar_token\n"
          exit 1
        fi

    # Send triggers to diff action, but only for pull requests
    - id: diff
      uses: bcgov/action-diff-triggers@0d193029efd26c76aeacaa84aba3328de8198370 # v0.2.0
      with:
        triggers: ${{ (github.event_name == 'pull_request' && inputs.triggers) || '' }}
        diff_branch: ${{ inputs.diff_branch }}

    - uses: actions/checkout@v5
      with:
        fetch-depth: 0
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.branch }}

    # Setup Java and cache dir
    - uses: actions/setup-java@v5
      with:
        cache: ${{ inputs.java-cache }}
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        server-id: "github"

    # Run tests, hopefully generating coverage for SonarCloud
    - if: steps.diff.outputs.triggered == 'true'
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        echo "🚀 Running test commands in ${{ inputs.dir }}..."
        echo "Commands: ${{ inputs.commands }}"

        # Run Tests with error handling
        if ! (${{ inputs.commands }}); then
          echo ""
          echo "❌ Test commands failed!"
          echo ""
          echo "🔧 Common troubleshooting steps:"
          echo "   1. Check if pom.xml or build.gradle exists and has test goals"
          echo "   2. Verify all dependencies are installed (mvn clean install or gradle build)"
          echo "   3. Check if test files exist and are properly configured"
          echo "   4. Ensure Java version compatibility"
          echo ""
          echo "📋 Debug information:"
          echo "   - Working directory: $(pwd)"
          echo "   - Java version: $(java -version 2>&1 | head -1)"
          echo "   - Maven version: $(mvn --version 2>/dev/null | head -1 || echo 'Maven not found')"
          echo "   - Gradle version: $(./gradlew --version 2>/dev/null | head -1 || echo 'Gradle wrapper not found')"
          echo "   - Available files:"
          ls -la | head -10 || echo "   (directory listing failed)"
          echo ""
          exit 1
        fi

        echo "✅ Test commands completed successfully"

    ### Optional SonarCloud

    - if: inputs.sonar_token && steps.diff.outputs.triggered == 'true'
      env:
        SONAR_TOKEN: ${{ inputs.sonar_token }}
      shell: bash
      working-directory: ${{ inputs.dir }}
      run: |
        # Run SonarCloud for ${{ inputs.java-cache }}

        if [ "${{ inputs.java-cache }}" == "maven" ]; then
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.host.url=https://sonarcloud.io ${{ inputs.sonar_args }}
        elif [ "${{ inputs.java-cache }}" == "gradle" ]; then
          gradlew build sonarqube --info -Dsonar.host.url=https://sonarcloud.io ${{ inputs.sonar_args }}
        else
          echo "ERROR: inputs.java-cache = ${{ inputs.java-cache }}"
          exit 1
        fi

    ### Cleanup

    # Fix - Docker can take file ownership, causing a cleanup fail
    - shell: bash
      if: steps.diff.outputs.triggered == 'true'
      id: get_uid
      run: |
        # User for workstation ownership reset/fix
        echo "uid=$(id -u ${USER})" >> $GITHUB_OUTPUT
    - uses: peter-murray/reset-workspace-ownership-action@3c5cbcf2e4aeecb506b3e6bc867e0955dab8dfe0 # v1
      if: steps.diff.outputs.triggered == 'true'
      with:
        user_id: ${{ steps.get_uid.outputs.uid }}

    # Fix - Clone for action.yml and other verifications
    - name: Checkout Action repo to pass tests
      if: always() && inputs.repository != github.repository
      uses: actions/checkout@v5
